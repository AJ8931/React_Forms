{"ast":null,"code":"var _jsxFileName = \"E:\\\\COMPLETED Projects\\\\reactpractice\\\\Forms React\\\\pointofsale\\\\src\\\\Components\\\\In.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport classes from \"./in.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst In = props => {\n  _s();\n\n  const password = useRef();\n  const passwordConfirm = useRef();\n  const userName = useRef();\n  const [UserName, setUserName] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const UserNameREF = userName.value;\n  const PasswordREF = password.value;\n  let [spano, setspano] = useState(false);\n  let [emp, setemp] = useState(true);\n  const [condition, setcondition] = useState(false);\n  let history2 = useNavigate();\n\n  const Handleachange = () => {\n    if (password.current.value === passwordConfirm.current.value) {\n      setspano(false);\n    } else {\n      setspano(true);\n    }\n  };\n\n  const emptychange = () => {\n    if (userName.current.value === \"\") {\n      setemp(false);\n    } else {\n      setemp(true);\n    }\n  };\n\n  const re_enter = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\",\n      children: \"Re-Enter Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"title\",\n      className: classes.control,\n      ref: passwordConfirm,\n      onChange: Handleachange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: spano ? \"doesnot match\" : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true); //         const link1=()=>{\n  //  <Link to={props.linking}></Link>\n  //         }\n\n\n  let history = useNavigate();\n\n  const interchangePage = () => {\n    history(props.linking);\n  };\n\n  let history1 = useNavigate();\n\n  const SignUp = () => {\n    setUserName(userName.value);\n    setPassword(passwordConfirm.value);\n    history1(props.linking1);\n  };\n\n  const SignIn = () => {\n    if (UserName === UserNameREF) {\n      setcondition(true);\n    } else {\n      alert('Username Doesnot Match');\n      setcondition(false);\n    }\n\n    if (Password === PasswordREF) {\n      setcondition(true);\n    } else {\n      alert('password Doesnot Match');\n      setcondition(false);\n    }\n\n    if (condition) {\n      history2('/signup');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.TITLE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.imagecontainer,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: props.TITLE,\n          src: props.image,\n          className: classes.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"UserName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          className: classes.control,\n          onChange: emptychange,\n          ref: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: emp ? \"\" : \"Must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"title\",\n          className: classes.control,\n          ref: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), props.linking === '/' ? re_enter : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.linking === '/' ? SignUp : SignIn,\n          children: props.TITLE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: interchangePage,\n        children: props.button\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(In, \"LjteKh6FfOiimVkrU7PlQAkbWAQ=\", false, function () {\n  return [useNavigate, useNavigate, useNavigate];\n});\n\n_c = In;\nexport default In;\n\nvar _c;\n\n$RefreshReg$(_c, \"In\");","map":{"version":3,"names":["React","useRef","useState","classes","useNavigate","In","props","password","passwordConfirm","userName","UserName","setUserName","Password","setPassword","UserNameREF","value","PasswordREF","spano","setspano","emp","setemp","condition","setcondition","history2","Handleachange","current","emptychange","re_enter","control","history","interchangePage","linking","history1","SignUp","linking1","SignIn","alert","form","TITLE","imagecontainer","image","avatar","actions","button"],"sources":["E:/COMPLETED Projects/reactpractice/Forms React/pointofsale/src/Components/In.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport classes from \"./in.module.css\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst In = (props) => {\r\n    const password = useRef();\r\n    const passwordConfirm = useRef();\r\n    const userName = useRef();\r\n    const [UserName, setUserName] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const UserNameREF = userName.value;\r\n    const PasswordREF = password.value;\r\n    let [spano, setspano] = useState(false);\r\n    let [emp, setemp] = useState(true);\r\n    const [condition, setcondition] = useState(false);\r\n    let history2 = useNavigate();\r\n    const Handleachange = () => {\r\n        if (password.current.value === passwordConfirm.current.value) {\r\n            setspano(false);\r\n        } else {\r\n            setspano(true);\r\n        }\r\n    }\r\n    const emptychange = () => {\r\n        if (userName.current.value === \"\") {\r\n            setemp(false);\r\n        } else {\r\n            setemp(true);\r\n        }\r\n    }\r\n\r\n    const re_enter = <><label htmlFor='title'>Re-Enter Password</label>\r\n\r\n        <input type=\"password\" id=\"title\" className={classes.control} ref={passwordConfirm} onChange={Handleachange} />\r\n        <span  >{spano ? \"doesnot match\" : \"\"}</span>\r\n    </>\r\n    //         const link1=()=>{\r\n    //  <Link to={props.linking}></Link>\r\n    //         }\r\n\r\n    let history = useNavigate();\r\n    const interchangePage = () => {\r\n        history(props.linking);\r\n\r\n    }\r\n    let history1 = useNavigate();\r\n    const SignUp = () => {\r\n        setUserName(userName.value);\r\n        setPassword(passwordConfirm.value);\r\n        history1(props.linking1);\r\n    }\r\n    const SignIn = () => {\r\n        if (UserName === UserNameREF) {\r\n            setcondition(true);\r\n        }\r\n        else {\r\n            alert('Username Doesnot Match');\r\n            setcondition(false);\r\n        } if (Password === PasswordREF) {\r\n            setcondition(true);\r\n        } else {\r\n            alert('password Doesnot Match');\r\n            setcondition(false);\r\n        }\r\n        if (condition) {\r\n            history2('/signup')\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className={classes.form}>\r\n            <form >\r\n                <h1>{props.TITLE}</h1>\r\n                <div className={classes.imagecontainer}>\r\n                    <img alt={props.TITLE} src={props.image} className={classes.avatar}>\r\n                    </img>\r\n                </div>\r\n                <div className={classes.control}>\r\n\r\n                    <label htmlFor='title'>UserName</label>\r\n\r\n                    <input type=\"text\" id=\"title\" className={classes.control} onChange={emptychange} ref={userName} />\r\n                    <span  >{emp ? \"\" : \"Must not be empty\"}</span>\r\n\r\n                    <label htmlFor='title'>Password</label>\r\n\r\n                    <input type=\"password\" id=\"title\" className={classes.control} ref={password} />\r\n                    {props.linking === '/' ? re_enter : \"\"}\r\n\r\n                </div>\r\n                <div className={classes.actions}>\r\n                    <button onClick={props.linking === '/' ? SignUp : SignIn}>{props.TITLE}</button>\r\n                </div>\r\n            </form>\r\n            <div className={classes.actions}>\r\n                <button onClick={interchangePage} >{props.button}</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default In;"],"mappings":"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"},"metadata":{},"sourceType":"module"}